= form_for item, remote: true, html: { class: "js-itemForm #{if item.id then 'js-itemForm-edit' else 'js-itemForm-new' end}" } do |f|
  / li.collection-item.mod-item-collection-item.js-itemForm-item

  div.right-align
    = f.button 'Cancel', type: :button, class: 'btn-flat js-closeEditItemForm' if item.id

  div.field.mod-item-field.mod-item-field-name
    = f.label :name
    br
    = f.text_field :name

  span.mod-item-before_quantity x

  div.field.mod-item-field.mod-item-field-quantity
    = f.label :Quantity
    br
    = f.text_field :quantity

  div.field.mod-item-field.mod-item-field-orderer
    = f.label :orderer
    br
    = f.text_field :orderer

  / br

  / div.field.mod-item-field.mod-item-field-price
    = f.label :price
    br
    = f.text_field :price

  / span.mod-item-before_unit = '/'

  / div.field.mod-item-field.mod-item-field-unit
    = f.label :unit
    br
    = f.text_field :unit, tabindex: -1

  div.actions.right-align
    = f.hidden_field :paper_id
    = f.button type: 'submit', class: "btn"
      i.material-icons.left playlist_add
      = (if item.id then 'Update Item' else 'Create Item' end)

- if item.id
  = form_for item, method: :delete, remote: true, html: { id: nil, class: 'item-deleteForm right-align js-itemDeleteForm' } do |f|
    = f.button 'Destroy', class: 'btn red', type: 'submit'
